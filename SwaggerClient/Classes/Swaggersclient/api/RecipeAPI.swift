//
// RecipeAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class RecipeAPI: APIBase {
    /**
     Export recipe
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func exportRecipe(completion: ((data: Recipe?, error: ErrorType?) -> Void)) {
        exportRecipeWithRequestBuilder().execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Export recipe
     - GET /recipe/export
     - 
     - API Key:
       - type: apiKey master_key 
       - name: master_key
     - examples: [{contentType=application/json, example={
  "collections" : {
    "key" : {
      "columns" : [ {
        "key" : {
          "category" : "aeiou",
          "type" : "aeiou"
        }
      } ]
    }
  },
  "continuous_queries" : [ {
    "query" : "aeiou",
    "name" : "aeiou",
    "options" : {
      "key" : "{}"
    },
    "partitionKeys" : [ "aeiou" ],
    "tableName" : "aeiou"
  } ],
  "materialized_views" : [ {
    "update_interval" : "aeiou",
    "query" : "aeiou",
    "last_update" : "2000-01-23T04:56:07.000+00:00",
    "name" : "aeiou",
    "options" : {
      "key" : "{}"
    },
    "incremental" : true,
    "table_name" : "aeiou"
  } ],
  "strategy" : "aeiou"
}}]

     - returns: RequestBuilder<Recipe> 
     */
    public class func exportRecipeWithRequestBuilder() -> RequestBuilder<Recipe> {
        let path = "/recipe/export"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Recipe>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Install recipe
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func installRecipe(completion: ((data: SuccessMessage?, error: ErrorType?) -> Void)) {
        installRecipeWithRequestBuilder().execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Install recipe
     - POST /recipe/install
     - 
     - API Key:
       - type: apiKey master_key 
       - name: master_key
     - examples: [{contentType=application/json, example={
  "success" : true,
  "message" : "aeiou"
}}]

     - returns: RequestBuilder<SuccessMessage> 
     */
    public class func installRecipeWithRequestBuilder() -> RequestBuilder<SuccessMessage> {
        let path = "/recipe/install"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SuccessMessage>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

}
