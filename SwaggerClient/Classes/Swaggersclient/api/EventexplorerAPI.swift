//
// EventexplorerAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class EventexplorerAPI: APIBase {
    /**
     Perform simple query on event data
     
     - parameter analyzeRequest: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func analyzeEvents(analyzeRequest analyzeRequest: AnalyzeRequest, completion: ((data: QueryResult?, error: ErrorType?) -> Void)) {
        analyzeEventsWithRequestBuilder(analyzeRequest: analyzeRequest).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Perform simple query on event data
     - POST /event-explorer/analyze
     - 
     - API Key:
       - type: apiKey read_key 
       - name: read_key
     - examples: [{contentType=application/json, example={
  "result" : [ [ "{}" ] ],
  "metadata" : [ {
    "descriptiveName" : "aeiou",
    "unique" : true,
    "name" : "aeiou",
    "description" : "aeiou",
    "type" : "aeiou",
    "category" : "aeiou"
  } ],
  "failed" : true,
  "error" : {
    "charPositionInLine" : 123,
    "sqlState" : "aeiou",
    "errorCode" : 123,
    "message" : "aeiou",
    "errorLine" : 123
  },
  "properties" : {
    "key" : "{}"
  }
}}]
     
     - parameter analyzeRequest: (body)  

     - returns: RequestBuilder<QueryResult> 
     */
    public class func analyzeEventsWithRequestBuilder(analyzeRequest analyzeRequest: AnalyzeRequest) -> RequestBuilder<QueryResult> {
        let path = "/event-explorer/analyze"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = analyzeRequest.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<QueryResult>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Create Pre-computed table
     
     - parameter createPrecomputedTable: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func createPrecomputedTable(createPrecomputedTable createPrecomputedTable: CreatePrecomputedTable, completion: ((data: PrecalculatedTable?, error: ErrorType?) -> Void)) {
        createPrecomputedTableWithRequestBuilder(createPrecomputedTable: createPrecomputedTable).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Create Pre-computed table
     - POST /event-explorer/pre_calculate
     - 
     - API Key:
       - type: apiKey master_key 
       - name: master_key
     - examples: [{contentType=application/json, example={
  "name" : "aeiou",
  "tableName" : "aeiou"
}}]
     
     - parameter createPrecomputedTable: (body)  

     - returns: RequestBuilder<PrecalculatedTable> 
     */
    public class func createPrecomputedTableWithRequestBuilder(createPrecomputedTable createPrecomputedTable: CreatePrecomputedTable) -> RequestBuilder<PrecalculatedTable> {
        let path = "/event-explorer/pre_calculate"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = createPrecomputedTable.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<PrecalculatedTable>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Event statistics
     
     - parameter eventExplorerGetEventStatistics: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getEventStatistics(eventExplorerGetEventStatistics eventExplorerGetEventStatistics: EventExplorerGetEventStatistics, completion: ((data: QueryResult?, error: ErrorType?) -> Void)) {
        getEventStatisticsWithRequestBuilder(eventExplorerGetEventStatistics: eventExplorerGetEventStatistics).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Event statistics
     - POST /event-explorer/statistics
     - 
     - API Key:
       - type: apiKey read_key 
       - name: read_key
     - examples: [{contentType=application/json, example={
  "result" : [ [ "{}" ] ],
  "metadata" : [ {
    "descriptiveName" : "aeiou",
    "unique" : true,
    "name" : "aeiou",
    "description" : "aeiou",
    "type" : "aeiou",
    "category" : "aeiou"
  } ],
  "failed" : true,
  "error" : {
    "charPositionInLine" : 123,
    "sqlState" : "aeiou",
    "errorCode" : 123,
    "message" : "aeiou",
    "errorLine" : 123
  },
  "properties" : {
    "key" : "{}"
  }
}}]
     
     - parameter eventExplorerGetEventStatistics: (body)  

     - returns: RequestBuilder<QueryResult> 
     */
    public class func getEventStatisticsWithRequestBuilder(eventExplorerGetEventStatistics eventExplorerGetEventStatistics: EventExplorerGetEventStatistics) -> RequestBuilder<QueryResult> {
        let path = "/event-explorer/statistics"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = eventExplorerGetEventStatistics.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<QueryResult>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Event statistics
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getExtraDimensions(completion: ((data: [String:[String]]?, error: ErrorType?) -> Void)) {
        getExtraDimensionsWithRequestBuilder().execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Event statistics
     - GET /event-explorer/extra_dimensions
     - 
     - API Key:
       - type: apiKey read_key 
       - name: read_key
     - examples: [{contentType=application/json, example={
  "key" : [ "aeiou" ]
}}]

     - returns: RequestBuilder<[String:[String]]> 
     */
    public class func getExtraDimensionsWithRequestBuilder() -> RequestBuilder<[String:[String]]> {
        let path = "/event-explorer/extra_dimensions"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<[String:[String]]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

}
