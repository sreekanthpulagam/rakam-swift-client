//
// UseractionAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class UseractionAPI: APIBase {
    /**
     Apply batch operation
     
     - parameter userEmailActionBatch: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func batch(userEmailActionBatch userEmailActionBatch: UserEmailActionBatch, completion: ((data: Int64?, error: ErrorType?) -> Void)) {
        batchWithRequestBuilder(userEmailActionBatch: userEmailActionBatch).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Apply batch operation
     - POST /user/action/email/batch
     - 
     - API Key:
       - type: apiKey read_key 
       - name: read_key
     - examples: [{contentType=application/json, example=123456789}]
     
     - parameter userEmailActionBatch: (body)  

     - returns: RequestBuilder<Int64> 
     */
    public class func batchWithRequestBuilder(userEmailActionBatch userEmailActionBatch: UserEmailActionBatch) -> RequestBuilder<Int64> {
        let path = "/user/action/email/batch"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = userEmailActionBatch.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Int64>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Perform action for single user
     
     - parameter userEmailActionSend: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func send(userEmailActionSend userEmailActionSend: UserEmailActionSend, completion: ((data: Bool?, error: ErrorType?) -> Void)) {
        sendWithRequestBuilder(userEmailActionSend: userEmailActionSend).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Perform action for single user
     - POST /user/action/email/single
     - 
     - API Key:
       - type: apiKey read_key 
       - name: read_key
     - examples: [{contentType=application/json, example=true}]
     
     - parameter userEmailActionSend: (body)  

     - returns: RequestBuilder<Bool> 
     */
    public class func sendWithRequestBuilder(userEmailActionSend userEmailActionSend: UserEmailActionSend) -> RequestBuilder<Bool> {
        let path = "/user/action/email/single"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = userEmailActionSend.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Bool>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

}
