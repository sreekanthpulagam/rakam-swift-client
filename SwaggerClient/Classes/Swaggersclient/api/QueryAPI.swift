//
// QueryAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class QueryAPI: APIBase {
    /**
     Execute query on event data-set
     
     - parameter execute: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func execute(execute execute: Execute, completion: ((data: QueryResult?, error: ErrorType?) -> Void)) {
        executeWithRequestBuilder(execute: execute).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Execute query on event data-set
     - POST /query/execute
     - 
     - API Key:
       - type: apiKey read_key 
       - name: read_key
     - examples: [{contentType=application/json, example={
  "result" : [ [ "{}" ] ],
  "metadata" : [ {
    "descriptiveName" : "aeiou",
    "unique" : true,
    "name" : "aeiou",
    "description" : "aeiou",
    "type" : "aeiou",
    "category" : "aeiou"
  } ],
  "failed" : true,
  "error" : {
    "charPositionInLine" : 123,
    "sqlState" : "aeiou",
    "errorCode" : 123,
    "message" : "aeiou",
    "errorLine" : 123
  },
  "properties" : {
    "key" : "{}"
  }
}}]
     
     - parameter execute: (body)  

     - returns: RequestBuilder<QueryResult> 
     */
    public class func executeWithRequestBuilder(execute execute: Execute) -> RequestBuilder<QueryResult> {
        let path = "/query/execute"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = execute.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<QueryResult>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Explain query
     
     - parameter explain: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func explain(explain explain: Explain, completion: ((data: ResponseQuery?, error: ErrorType?) -> Void)) {
        explainWithRequestBuilder(explain: explain).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Explain query
     - POST /query/explain
     - 
     - API Key:
       - type: apiKey read_key 
       - name: read_key
     - examples: [{contentType=application/json, example={
  "limit" : 123456789,
  "orderBy" : [ {
    "expression" : "aeiou",
    "ordering" : "aeiou",
    "index" : 123
  } ],
  "groupBy" : [ {
    "expression" : "aeiou",
    "index" : 123
  } ]
}}]
     
     - parameter explain: (body)  

     - returns: RequestBuilder<ResponseQuery> 
     */
    public class func explainWithRequestBuilder(explain explain: Explain) -> RequestBuilder<ResponseQuery> {
        let path = "/query/explain"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = explain.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ResponseQuery>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Test query
     
     - parameter queryMetadata: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func metadata(queryMetadata queryMetadata: QueryMetadata, completion: ((data: [SchemaField]?, error: ErrorType?) -> Void)) {
        metadataWithRequestBuilder(queryMetadata: queryMetadata).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Test query
     - POST /query/metadata
     - 
     - API Key:
       - type: apiKey read_key 
       - name: read_key
     - examples: [{contentType=application/json, example=[ {
  "descriptiveName" : "aeiou",
  "unique" : true,
  "name" : "aeiou",
  "description" : "aeiou",
  "type" : "aeiou",
  "category" : "aeiou"
} ]}]
     
     - parameter queryMetadata: (body)  

     - returns: RequestBuilder<[SchemaField]> 
     */
    public class func metadataWithRequestBuilder(queryMetadata queryMetadata: QueryMetadata) -> RequestBuilder<[SchemaField]> {
        let path = "/query/metadata"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = queryMetadata.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<[SchemaField]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

}
